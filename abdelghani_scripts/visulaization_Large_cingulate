import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import umap
import os
from sklearn.preprocessing import StandardScaler

# --- Your file paths ---
embedding_path = "/neurospin/dico/babdelghani/Runs/02_champollion_v1/Output/LARGE_CINGULATE_right"
volume_path = "/neurospin/dico/data/deep_folding/current/datasets/hcp/hcp_subjects_gender_age_volume_normalized.csv"
save_path = "/neurospin/dico/babdelghani/Runs/02_champollion_v1/Program/2023_jlaval_STSbabies/abdelghani_figures/umap_yaware_256_64_0.05_volume_projection.png"

# --- Load files ---
embeddings = pd.read_csv(embedding_path)
volumes = pd.read_csv(volume_path)

# --- Prepare identifiers ---
embeddings["ID"] = embeddings["ID"].astype(str)
volumes["Subject"] = volumes["Subject"].astype(str)

# --- Filter only matching subjects ---
common_ids = embeddings["ID"].isin(volumes["Subject"])
embeddings = embeddings[common_ids]
volumes = volumes[volumes["Subject"].isin(embeddings["ID"])]

# --- Sort both by ID/Subject to align rows ---
embeddings = embeddings.sort_values("ID").reset_index(drop=True)
volumes = volumes.sort_values("Subject").reset_index(drop=True)

# --- Extract dimensional data and volume values ---
dim_cols = [f"dim{i}" for i in range(1, 33) if f"dim{i}" in embeddings.columns]
X = embeddings[dim_cols].values
y = volumes["volume"].values

# --- UMAP projection ---
umap_model = umap.UMAP(n_components=2, random_state=42)
X_umap = umap_model.fit_transform(X)

# --- Plot ---
plt.figure(figsize=(8, 6))
scatter = plt.scatter(X_umap[:, 0], X_umap[:, 1], c=y, cmap="viridis", s=10)
plt.colorbar(scatter, label="Brain Volume")
plt.title("UMAP Projection of Embeddings Colored by Volume")
plt.xlabel("UMAP-1")
plt.ylabel("UMAP-2")
plt.grid(True, linestyle='--', alpha=0.3)
plt.tight_layout()

# --- Save figure ---
os.makedirs(os.path.dirname(save_path), exist_ok=True)
plt.savefig(save_path)
plt.close()

print(f"UMAP figure saved to: {save_path}")
